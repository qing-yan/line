import{aP as c,F as i,P as a,Q as _,ae as n,S as e,ad as o,Y as k,c as m,ac as s,u as b,aQ as h}from"./framework-270ea3de.js";const q={data(){return{pre:"",suf:""}},methods:{decode(){},copy(){}}},x=e("span",null,"1. 不包含：",-1),g=e("span",null,"2. 包含：",-1),V=e("span",null,"3. 含左不含右：",-1),v=e("span",null,"4. 含右不含左：",-1);function y(d,t,f,r,l,F){const u=i("el-input");return a(),_(k,null,[n(u,{modelValue:l.pre,"onUpdate:modelValue":t[0]||(t[0]=p=>l.pre=p),rows:10,type:"",placeholder:"前",style:{width:"50%"}},null,8,["modelValue"]),n(u,{modelValue:l.suf,"onUpdate:modelValue":t[1]||(t[1]=p=>l.suf=p),rows:10,type:"",placeholder:"后",style:{width:"50%"}},null,8,["modelValue"]),e("div",null,[x,e("span",null,"(?<="+o(l.pre)+").*(?="+o(l.suf)+")",1)]),e("div",null,[g,e("span",null,o(l.pre)+".*"+o(l.suf),1)]),e("div",null,[V,e("span",null,o(l.pre)+".*(?="+o(l.suf)+")",1)]),e("div",null,[v,e("span",null,"(?<="+o(l.pre)+").*"+o(l.suf),1)])],64)}const S=c(q,[["render",y],["__file","regex.vue"]]),w={href:"https://c.runoob.com/front-end/854/",target:"_blank",rel:"noopener noreferrer"},N=h('<ol><li>匹配{}中间的内容，不包含{}本身，()：</li></ol><blockquote><p>(?&lt;={).*(?=})</p></blockquote><ol start="2"><li>匹配{}中间的内容，并且包含{}本身，[]：</li></ol><blockquote><p>{.*}</p></blockquote><ol start="3"><li>匹配{}中间的内容，含左不含右，[)：</li></ol><blockquote><p>{.*(?=})</p></blockquote><ol start="4"><li>匹配{}中间的内容，含右不含左，(]：</li></ol><blockquote><p>(?&lt;={).*}</p></blockquote><ol start="5"><li>匹配中文（多字）：</li></ol><blockquote><p>[\\u4e00-\\u9fa5]+</p></blockquote><ol start="6"><li>从前或后匹配至多10个字符，无法跨行，因为.无法匹配换行符：</li></ol><blockquote><p>^.{0,10}</p><p>.{0,10}$</p></blockquote><ol start="7"><li>从前或后匹配至多10个字符，可以跨行：</li></ol><blockquote><p>^[\\s\\S]{0,3}</p><p>[\\s\\S]{0,3}$</p></blockquote><ol start="8"><li>匹配0长度空行，仅部分解析器可用：</li></ol><blockquote><p>^$</p></blockquote><ol start="9"><li>notepad++删除空行：</li></ol><blockquote><p>^\\r\\n</p></blockquote>',18),B=e("br",null,null,-1),E={href:"https://jerrymei.cn/regular-expression-position/",target:"_blank",rel:"noopener noreferrer"},C=m({__name:"regex.html",setup(d){return(t,f)=>{const r=i("ExternalLinkIcon");return a(),_("div",null,[e("p",null,[e("a",w,[s("在线正则地址"),n(r)])]),N,n(b(S)),e("p",null,[s("参考文档："),B,s(" [^]:"),e("a",E,[s("正则表达式位置匹配——匹配两个特殊符号中间的内容"),n(r)])])])}}}),L=c(C,[["__file","regex.html.vue"]]);export{L as default};
